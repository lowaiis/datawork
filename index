import sqlite3
import time
import random
import datetime
import pandas as pd 
import numpy as np
from poloniex import Poloniex


'''
	Creating a database to hold the data variables for machine learning
	
	This file will be used to set up a database ( cloud in the future ) to store data for machine learning
	
	This will just be the skeleton/shell of the table


'''

#--Create database 
def create_table():
	c.execute('DROP TABLE IF EXISTS datab')
	c.execute('''
		CREATE TABLE IF NOT EXISTS datab(
			id INTEGER,
			last REAL,
			lowest REAL,
			highest REAL,
			pct_chnge REAL,
			bvol REAL,
			qvol REAL,
			froze INTEGER,
			day_high REAL,
			day_low REAL
			)
		'''	)

#--Call this function everytime the ticker pulls new data							
def data_entry(list):
	
	#creates the time stamp
	unix = time.time()
	date = str(datetime.datetime.fromtimestamp(unix).strftime('%Y-%m-%d %H:%M:%S'))
	
	c.execute("INSERT INTO datab VALUES (?,?,?,?,?,?,?,?,?,?)",(list[0],list[1],list[2],list[3],list[4],list[5],list[6],list[7],list[8],list[9],))
		
	#(id, last, lowest, highest, pct_chnge, bvol, qvol, froze, day_high, day_low)
	
	conn.commit()

	
	
def read_db():
	c.execute('SELECT * FROM datab')
	data = c.fetchall()
	print(data)
	
#--Returns the live ticker
def createTicker():
	polo = Poloniex('GYTKD7FU-9IXAE30F-0EIE7F9Y-QRYQPZAW','635ef6805b0424b9ea2a45eccb9c63498054e9d943d9d3767f8c59ee0e8f5d77f9af323f2604a46e43049cfb8ffb140856d3a123a6caf7ea9cbfb4bc2dbfc1c6')

	support = "https://poloniex.com/support/api/"
	return polo

	
'''
	Pulls data from Poloniex via a ticker object
'''
def pullData(ticker):
	values = []
		
	for j in ticker.values():
			values.append(j)
			
	return values


	
#----- MAIN -----#	

#connect to desired file/database
conn = sqlite3.connect('data.db')
#create a cursor to execute action
c = conn.cursor()


'''

This section of code basically does the following
1. create a live ticker ( The api object/cursor to communicate w Polo
2. Select Currency Pair
3. Create the table

'''
p_ticker = createTicker()
p_ticker.returnTicker()['BTC_ETH']
create_table()


'''

Here I use a while loop to grab live data and store it in the database
1. call pullData() method to pump the values from Polo into the list, value_list
2. pump all that data into database 
3. print database


'''
count = 1
while True:
	value_list = pullData(p_ticker.returnTicker()['BTC_ETH'])
	data_entry(value_list)
	read_db()
	print('dataset: ', count)
	count += 1
